{"ast":null,"code":"var _jsxFileName = \"D:\\\\HUTECH\\\\feedback_system\\\\frontend\\\\src\\\\services\\\\socket.js\",\n  _s = $RefreshSig$();\nimport io from 'socket.io-client';\nimport toast from 'react-hot-toast';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass SocketService {\n  constructor() {\n    this.socket = null;\n    this.isConnected = false;\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 5;\n    this.reconnectDelay = 1000;\n    this.eventHandlers = new Map();\n  }\n\n  /**\r\n   * Initialize socket connection\r\n   */\n  connect(token, userId) {\n    if (this.socket) {\n      this.disconnect();\n    }\n\n    // Direct connection to backend\n    const serverUrl = 'http://localhost:3001';\n    this.socket = io(serverUrl, {\n      transports: ['websocket', 'polling'],\n      timeout: 20000,\n      reconnection: true,\n      reconnectionAttempts: this.maxReconnectAttempts,\n      reconnectionDelay: this.reconnectDelay,\n      autoConnect: true\n    });\n    this.setupEventHandlers();\n\n    // Authenticate after connection\n    this.socket.on('connect', () => {\n      console.log('🔌 Connected to server');\n      this.isConnected = true;\n      this.reconnectAttempts = 0;\n      if (token && userId) {\n        this.authenticate(token, userId);\n      }\n    });\n    return this.socket;\n  }\n\n  /**\r\n   * Authenticate user with the server\r\n   */\n  authenticate(token, userId) {\n    if (!this.socket) return;\n    this.socket.emit('authenticate', {\n      token,\n      userId\n    });\n  }\n\n  /**\r\n   * Setup common event handlers\r\n   */\n  setupEventHandlers() {\n    if (!this.socket) return;\n\n    // Connection events\n    this.socket.on('connect', () => {\n      this.isConnected = true;\n      this.emit('connection_status', {\n        connected: true\n      });\n    });\n    this.socket.on('disconnect', reason => {\n      console.log('🔌 Disconnected from server:', reason);\n      this.isConnected = false;\n      this.emit('connection_status', {\n        connected: false,\n        reason\n      });\n    });\n\n    // Authentication events\n    this.socket.on('authenticated', data => {\n      console.log('✅ Authentication successful:', data.user);\n      toast.success('Kết nối real-time thành công');\n      this.emit('authenticated', data);\n    });\n    this.socket.on('auth_error', error => {\n      console.error('❌ Authentication failed:', error);\n      toast.error('Kết nối real-time thất bại');\n      this.emit('auth_error', error);\n    });\n\n    // Force logout event\n    this.socket.on('force_logout', data => {\n      console.log('🚪 Force logout received:', data);\n      toast.error(data.message || 'Bạn đã bị đăng xuất từ thiết bị khác');\n\n      // Clear local storage\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n\n      // Disconnect socket\n      this.disconnect();\n\n      // Redirect to login page\n      setTimeout(() => {\n        window.location.href = '/login';\n      }, 2000);\n      this.emit('force_logout', data);\n    });\n\n    // Rate limiting\n    this.socket.on('rate_limit_exceeded', data => {\n      toast.error(data.message || 'Quá nhiều yêu cầu, vui lòng thử lại sau');\n      this.emit('rate_limit_exceeded', data);\n    });\n\n    // Error handling\n    this.socket.on('error', error => {\n      console.error('❌ Socket error:', error);\n      this.emit('error', error);\n    });\n\n    // Reconnection events\n    this.socket.on('reconnect', attemptNumber => {\n      console.log(`🔄 Reconnected after ${attemptNumber} attempts`);\n      toast.success('Reconnected to server');\n      this.emit('reconnected', {\n        attemptNumber\n      });\n    });\n    this.socket.on('reconnect_error', error => {\n      this.reconnectAttempts++;\n      console.error(`❌ Reconnection attempt ${this.reconnectAttempts} failed:`, error);\n      if (this.reconnectAttempts >= this.maxReconnectAttempts) {\n        toast.error('Failed to reconnect to server');\n      }\n    });\n\n    // Feedback events\n    this.socket.on('newFeedback', data => {\n      this.emit('newFeedback', data);\n\n      // Show notification for admins/moderators\n      toast.success(`New feedback: ${data.feedback.title}`, {\n        duration: 5000\n      });\n    });\n    this.socket.on('feedbackUpdated', data => {\n      this.emit('feedbackUpdated', data);\n    });\n    this.socket.on('feedbackAssigned', data => {\n      this.emit('feedbackAssigned', data);\n    });\n\n    // Real-time notifications\n    this.socket.on('new_feedback_notification', data => {\n      this.emit('new_feedback_notification', data);\n      toast.custom(t => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${t.visible ? 'animate-enter' : 'animate-leave'} max-w-md w-full bg-white shadow-lg rounded-lg pointer-events-auto flex ring-1 ring-black ring-opacity-5`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 w-0 p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-start\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-shrink-0\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-10 w-10 rounded-full bg-primary-500 flex items-center justify-center\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-white text-sm font-medium\",\n                  children: \"\\uD83D\\uDCDD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-3 flex-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm font-medium text-gray-900\",\n                children: \"New Feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-1 text-sm text-gray-500\",\n                children: data.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-gray-400\",\n                children: [\"From: \", data.submittedBy]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex border-l border-gray-200\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toast.dismiss(t.id),\n            className: \"w-full border border-transparent rounded-none rounded-r-lg p-4 flex items-center justify-center text-sm font-medium text-primary-600 hover:text-primary-500 focus:outline-none focus:ring-2 focus:ring-primary-500\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), {\n        duration: 8000\n      });\n    });\n    this.socket.on('feedback_status_updated', data => {\n      this.emit('feedback_status_updated', data);\n    });\n    this.socket.on('your_feedback_updated', data => {\n      this.emit('your_feedback_updated', data);\n      toast.success(data.message, {\n        duration: 5000\n      });\n    });\n\n    // Comment events\n    this.socket.on('new_comment', data => {\n      this.emit('new_comment', data);\n    });\n\n    // Typing indicators\n    this.socket.on('user_typing', data => {\n      this.emit('user_typing', data);\n    });\n    this.socket.on('user_stopped_typing', data => {\n      this.emit('user_stopped_typing', data);\n    });\n\n    // User presence\n    this.socket.on('user_offline', data => {\n      this.emit('user_offline', data);\n    });\n\n    // Connection statistics\n    this.socket.on('connection_stats', data => {\n      this.emit('connection_stats', data);\n    });\n  }\n\n  /**\r\n   * Disconnect from server\r\n   */\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n      this.isConnected = false;\n    }\n  }\n\n  /**\r\n   * Join a specific room\r\n   */\n  joinRoom(roomName) {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('join_room', roomName);\n    }\n  }\n\n  /**\r\n   * Leave a specific room\r\n   */\n  leaveRoom(roomName) {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('leave_room', roomName);\n    }\n  }\n\n  /**\r\n   * Join feedback-specific room for real-time updates\r\n   */\n  joinFeedback(feedbackId) {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('join_feedback', feedbackId);\n    }\n  }\n\n  /**\r\n   * Leave feedback-specific room\r\n   */\n  leaveFeedback(feedbackId) {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('leave_feedback', feedbackId);\n    }\n  }\n\n  /**\r\n   * Send a comment\r\n   */\n  sendComment(feedbackId, comment) {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('send_comment', {\n        feedbackId,\n        comment\n      });\n    }\n  }\n\n  /**\r\n   * Send typing indicator\r\n   */\n  startTyping(feedbackId) {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('typing_start', {\n        feedbackId\n      });\n    }\n  }\n\n  /**\r\n   * Stop typing indicator\r\n   */\n  stopTyping(feedbackId) {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('typing_stop', {\n        feedbackId\n      });\n    }\n  }\n\n  /**\r\n   * Submit feedback via WebSocket\r\n   */\n  submitFeedback(feedbackData) {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('submit_feedback', feedbackData);\n    }\n  }\n\n  /**\r\n   * Update feedback status via WebSocket\r\n   */\n  updateFeedbackStatus(feedbackId, status, customerId) {\n    if (this.socket && this.isConnected) {\n      this.socket.emit('update_feedback_status', {\n        feedbackId,\n        status,\n        customerId\n      });\n    }\n  }\n\n  /**\r\n   * Generic event listener\r\n   */\n  on(event, handler) {\n    if (!this.eventHandlers.has(event)) {\n      this.eventHandlers.set(event, new Set());\n    }\n    this.eventHandlers.get(event).add(handler);\n\n    // Also add to socket if connected\n    if (this.socket) {\n      this.socket.on(event, handler);\n    }\n  }\n\n  /**\r\n   * Remove event listener\r\n   */\n  off(event, handler) {\n    if (this.eventHandlers.has(event)) {\n      this.eventHandlers.get(event).delete(handler);\n    }\n    if (this.socket) {\n      this.socket.off(event, handler);\n    }\n  }\n\n  /**\r\n   * Emit custom event to internal handlers\r\n   */\n  emit(event, data) {\n    if (this.eventHandlers.has(event)) {\n      this.eventHandlers.get(event).forEach(handler => {\n        try {\n          handler(data);\n        } catch (error) {\n          console.error(`Error in event handler for ${event}:`, error);\n        }\n      });\n    }\n  }\n\n  /**\r\n   * Get connection status\r\n   */\n  getConnectionStatus() {\n    var _this$socket, _this$socket2;\n    return {\n      connected: this.isConnected,\n      socket: ((_this$socket = this.socket) === null || _this$socket === void 0 ? void 0 : _this$socket.connected) || false,\n      id: (_this$socket2 = this.socket) === null || _this$socket2 === void 0 ? void 0 : _this$socket2.id\n    };\n  }\n\n  /**\r\n   * Manually reconnect\r\n   */\n  reconnect() {\n    if (this.socket) {\n      this.socket.connect();\n    }\n  }\n}\n\n// Create singleton instance\nconst socketService = new SocketService();\n\n// React hook for using socket service\nexport const useSocket = () => {\n  _s();\n  const [isConnected, setIsConnected] = useState(socketService.isConnected);\n  const [socket, setSocket] = useState(socketService.socket);\n  useEffect(() => {\n    const handleConnect = () => setIsConnected(true);\n    const handleDisconnect = () => setIsConnected(false);\n    if (socketService.socket) {\n      socketService.socket.on('connect', handleConnect);\n      socketService.socket.on('disconnect', handleDisconnect);\n      setSocket(socketService.socket);\n      setIsConnected(socketService.socket.connected);\n    }\n    return () => {\n      if (socketService.socket) {\n        socketService.socket.off('connect', handleConnect);\n        socketService.socket.off('disconnect', handleDisconnect);\n      }\n    };\n  }, []);\n  return {\n    socket,\n    isConnected,\n    connect: socketService.connect.bind(socketService),\n    disconnect: socketService.disconnect.bind(socketService),\n    emit: socketService.emit.bind(socketService),\n    on: socketService.on.bind(socketService),\n    off: socketService.off.bind(socketService)\n  };\n};\n_s(useSocket, \"+pfNS8OszSgI91/Wwq5a68lfq6I=\");\nexport default socketService;","map":{"version":3,"names":["io","toast","useState","useEffect","jsxDEV","_jsxDEV","SocketService","constructor","socket","isConnected","reconnectAttempts","maxReconnectAttempts","reconnectDelay","eventHandlers","Map","connect","token","userId","disconnect","serverUrl","transports","timeout","reconnection","reconnectionAttempts","reconnectionDelay","autoConnect","setupEventHandlers","on","console","log","authenticate","emit","connected","reason","data","user","success","error","message","localStorage","removeItem","setTimeout","window","location","href","attemptNumber","feedback","title","duration","custom","t","className","visible","children","fileName","_jsxFileName","lineNumber","columnNumber","submittedBy","onClick","dismiss","id","joinRoom","roomName","leaveRoom","joinFeedback","feedbackId","leaveFeedback","sendComment","comment","startTyping","stopTyping","submitFeedback","feedbackData","updateFeedbackStatus","status","customerId","event","handler","has","set","Set","get","add","off","delete","forEach","getConnectionStatus","_this$socket","_this$socket2","reconnect","socketService","useSocket","_s","setIsConnected","setSocket","handleConnect","handleDisconnect","bind"],"sources":["D:/HUTECH/feedback_system/frontend/src/services/socket.js"],"sourcesContent":["import io from 'socket.io-client';\r\nimport toast from 'react-hot-toast';\r\nimport { useState, useEffect } from 'react';\r\n\r\nclass SocketService {\r\n  constructor() {\r\n    this.socket = null;\r\n    this.isConnected = false;\r\n    this.reconnectAttempts = 0;\r\n    this.maxReconnectAttempts = 5;\r\n    this.reconnectDelay = 1000;\r\n    this.eventHandlers = new Map();\r\n  }\r\n\r\n  /**\r\n   * Initialize socket connection\r\n   */\r\n  connect(token, userId) {\r\n    if (this.socket) {\r\n      this.disconnect();\r\n    }\r\n\r\n    // Direct connection to backend\r\n    const serverUrl = 'http://localhost:3001';\r\n    \r\n    this.socket = io(serverUrl, {\r\n      transports: ['websocket', 'polling'],\r\n      timeout: 20000,\r\n      reconnection: true,\r\n      reconnectionAttempts: this.maxReconnectAttempts,\r\n      reconnectionDelay: this.reconnectDelay,\r\n      autoConnect: true,\r\n    });\r\n\r\n    this.setupEventHandlers();\r\n    \r\n    // Authenticate after connection\r\n    this.socket.on('connect', () => {\r\n      console.log('🔌 Connected to server');\r\n      this.isConnected = true;\r\n      this.reconnectAttempts = 0;\r\n      \r\n      if (token && userId) {\r\n        this.authenticate(token, userId);\r\n      }\r\n    });\r\n\r\n    return this.socket;\r\n  }\r\n\r\n  /**\r\n   * Authenticate user with the server\r\n   */\r\n  authenticate(token, userId) {\r\n    if (!this.socket) return;\r\n\r\n    this.socket.emit('authenticate', { token, userId });\r\n  }\r\n\r\n  /**\r\n   * Setup common event handlers\r\n   */\r\n  setupEventHandlers() {\r\n    if (!this.socket) return;\r\n\r\n    // Connection events\r\n    this.socket.on('connect', () => {\r\n      this.isConnected = true;\r\n      this.emit('connection_status', { connected: true });\r\n    });\r\n\r\n    this.socket.on('disconnect', (reason) => {\r\n      console.log('🔌 Disconnected from server:', reason);\r\n      this.isConnected = false;\r\n      this.emit('connection_status', { connected: false, reason });\r\n    });\r\n\r\n    // Authentication events\r\n    this.socket.on('authenticated', (data) => {\r\n      console.log('✅ Authentication successful:', data.user);\r\n      toast.success('Kết nối real-time thành công');\r\n      this.emit('authenticated', data);\r\n    });\r\n\r\n    this.socket.on('auth_error', (error) => {\r\n      console.error('❌ Authentication failed:', error);\r\n      toast.error('Kết nối real-time thất bại');\r\n      this.emit('auth_error', error);\r\n    });\r\n\r\n    // Force logout event\r\n    this.socket.on('force_logout', (data) => {\r\n      console.log('🚪 Force logout received:', data);\r\n      toast.error(data.message || 'Bạn đã bị đăng xuất từ thiết bị khác');\r\n      \r\n      // Clear local storage\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      \r\n      // Disconnect socket\r\n      this.disconnect();\r\n      \r\n      // Redirect to login page\r\n      setTimeout(() => {\r\n        window.location.href = '/login';\r\n      }, 2000);\r\n      \r\n      this.emit('force_logout', data);\r\n    });\r\n\r\n    // Rate limiting\r\n    this.socket.on('rate_limit_exceeded', (data) => {\r\n      toast.error(data.message || 'Quá nhiều yêu cầu, vui lòng thử lại sau');\r\n      this.emit('rate_limit_exceeded', data);\r\n    });\r\n\r\n    // Error handling\r\n    this.socket.on('error', (error) => {\r\n      console.error('❌ Socket error:', error);\r\n      this.emit('error', error);\r\n    });\r\n\r\n    // Reconnection events\r\n    this.socket.on('reconnect', (attemptNumber) => {\r\n      console.log(`🔄 Reconnected after ${attemptNumber} attempts`);\r\n      toast.success('Reconnected to server');\r\n      this.emit('reconnected', { attemptNumber });\r\n    });\r\n\r\n    this.socket.on('reconnect_error', (error) => {\r\n      this.reconnectAttempts++;\r\n      console.error(`❌ Reconnection attempt ${this.reconnectAttempts} failed:`, error);\r\n      \r\n      if (this.reconnectAttempts >= this.maxReconnectAttempts) {\r\n        toast.error('Failed to reconnect to server');\r\n      }\r\n    });\r\n\r\n    // Feedback events\r\n    this.socket.on('newFeedback', (data) => {\r\n      this.emit('newFeedback', data);\r\n      \r\n      // Show notification for admins/moderators\r\n      toast.success(`New feedback: ${data.feedback.title}`, {\r\n        duration: 5000,\r\n      });\r\n    });\r\n\r\n    this.socket.on('feedbackUpdated', (data) => {\r\n      this.emit('feedbackUpdated', data);\r\n    });\r\n\r\n    this.socket.on('feedbackAssigned', (data) => {\r\n      this.emit('feedbackAssigned', data);\r\n    });\r\n\r\n    // Real-time notifications\r\n    this.socket.on('new_feedback_notification', (data) => {\r\n      this.emit('new_feedback_notification', data);\r\n      \r\n      toast.custom((t) => (\r\n        <div\r\n          className={`${\r\n            t.visible ? 'animate-enter' : 'animate-leave'\r\n          } max-w-md w-full bg-white shadow-lg rounded-lg pointer-events-auto flex ring-1 ring-black ring-opacity-5`}\r\n        >\r\n          <div className=\"flex-1 w-0 p-4\">\r\n            <div className=\"flex items-start\">\r\n              <div className=\"flex-shrink-0\">\r\n                <div className=\"h-10 w-10 rounded-full bg-primary-500 flex items-center justify-center\">\r\n                  <span className=\"text-white text-sm font-medium\">📝</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"ml-3 flex-1\">\r\n                <p className=\"text-sm font-medium text-gray-900\">\r\n                  New Feedback\r\n                </p>\r\n                <p className=\"mt-1 text-sm text-gray-500\">\r\n                  {data.title}\r\n                </p>\r\n                <p className=\"text-xs text-gray-400\">\r\n                  From: {data.submittedBy}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex border-l border-gray-200\">\r\n            <button\r\n              onClick={() => toast.dismiss(t.id)}\r\n              className=\"w-full border border-transparent rounded-none rounded-r-lg p-4 flex items-center justify-center text-sm font-medium text-primary-600 hover:text-primary-500 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ), { duration: 8000 });\r\n    });\r\n\r\n    this.socket.on('feedback_status_updated', (data) => {\r\n      this.emit('feedback_status_updated', data);\r\n    });\r\n\r\n    this.socket.on('your_feedback_updated', (data) => {\r\n      this.emit('your_feedback_updated', data);\r\n      \r\n      toast.success(data.message, {\r\n        duration: 5000,\r\n      });\r\n    });\r\n\r\n    // Comment events\r\n    this.socket.on('new_comment', (data) => {\r\n      this.emit('new_comment', data);\r\n    });\r\n\r\n    // Typing indicators\r\n    this.socket.on('user_typing', (data) => {\r\n      this.emit('user_typing', data);\r\n    });\r\n\r\n    this.socket.on('user_stopped_typing', (data) => {\r\n      this.emit('user_stopped_typing', data);\r\n    });\r\n\r\n    // User presence\r\n    this.socket.on('user_offline', (data) => {\r\n      this.emit('user_offline', data);\r\n    });\r\n\r\n    // Connection statistics\r\n    this.socket.on('connection_stats', (data) => {\r\n      this.emit('connection_stats', data);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Disconnect from server\r\n   */\r\n  disconnect() {\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n      this.socket = null;\r\n      this.isConnected = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Join a specific room\r\n   */\r\n  joinRoom(roomName) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('join_room', roomName);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Leave a specific room\r\n   */\r\n  leaveRoom(roomName) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('leave_room', roomName);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Join feedback-specific room for real-time updates\r\n   */\r\n  joinFeedback(feedbackId) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('join_feedback', feedbackId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Leave feedback-specific room\r\n   */\r\n  leaveFeedback(feedbackId) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('leave_feedback', feedbackId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send a comment\r\n   */\r\n  sendComment(feedbackId, comment) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('send_comment', { feedbackId, comment });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send typing indicator\r\n   */\r\n  startTyping(feedbackId) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('typing_start', { feedbackId });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop typing indicator\r\n   */\r\n  stopTyping(feedbackId) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('typing_stop', { feedbackId });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Submit feedback via WebSocket\r\n   */\r\n  submitFeedback(feedbackData) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('submit_feedback', feedbackData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update feedback status via WebSocket\r\n   */\r\n  updateFeedbackStatus(feedbackId, status, customerId) {\r\n    if (this.socket && this.isConnected) {\r\n      this.socket.emit('update_feedback_status', { \r\n        feedbackId, \r\n        status, \r\n        customerId \r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generic event listener\r\n   */\r\n  on(event, handler) {\r\n    if (!this.eventHandlers.has(event)) {\r\n      this.eventHandlers.set(event, new Set());\r\n    }\r\n    this.eventHandlers.get(event).add(handler);\r\n\r\n    // Also add to socket if connected\r\n    if (this.socket) {\r\n      this.socket.on(event, handler);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove event listener\r\n   */\r\n  off(event, handler) {\r\n    if (this.eventHandlers.has(event)) {\r\n      this.eventHandlers.get(event).delete(handler);\r\n    }\r\n\r\n    if (this.socket) {\r\n      this.socket.off(event, handler);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emit custom event to internal handlers\r\n   */\r\n  emit(event, data) {\r\n    if (this.eventHandlers.has(event)) {\r\n      this.eventHandlers.get(event).forEach(handler => {\r\n        try {\r\n          handler(data);\r\n        } catch (error) {\r\n          console.error(`Error in event handler for ${event}:`, error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get connection status\r\n   */\r\n  getConnectionStatus() {\r\n    return {\r\n      connected: this.isConnected,\r\n      socket: this.socket?.connected || false,\r\n      id: this.socket?.id,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Manually reconnect\r\n   */\r\n  reconnect() {\r\n    if (this.socket) {\r\n      this.socket.connect();\r\n    }\r\n  }\r\n}\r\n\r\n// Create singleton instance\r\nconst socketService = new SocketService();\r\n\r\n// React hook for using socket service\r\nexport const useSocket = () => {\r\n  const [isConnected, setIsConnected] = useState(socketService.isConnected);\r\n  const [socket, setSocket] = useState(socketService.socket);\r\n\r\n  useEffect(() => {\r\n    const handleConnect = () => setIsConnected(true);\r\n    const handleDisconnect = () => setIsConnected(false);\r\n\r\n    if (socketService.socket) {\r\n      socketService.socket.on('connect', handleConnect);\r\n      socketService.socket.on('disconnect', handleDisconnect);\r\n      setSocket(socketService.socket);\r\n      setIsConnected(socketService.socket.connected);\r\n    }\r\n\r\n    return () => {\r\n      if (socketService.socket) {\r\n        socketService.socket.off('connect', handleConnect);\r\n        socketService.socket.off('disconnect', handleDisconnect);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    socket,\r\n    isConnected,\r\n    connect: socketService.connect.bind(socketService),\r\n    disconnect: socketService.disconnect.bind(socketService),\r\n    emit: socketService.emit.bind(socketService),\r\n    on: socketService.on.bind(socketService),\r\n    off: socketService.off.bind(socketService)\r\n  };\r\n};\r\n\r\nexport default socketService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}